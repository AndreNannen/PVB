@model Delta_Impuls.Models.member
@using System.Web.Mvc

@{
    ViewBag.Title = "Lid toevoegen";
}

<h2>Lid toevoegen</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       

        <div class="form-group">
            @Html.LabelFor(model => model.bondsnr, "Bondsnummer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bondsnr, new { htmlAttributes = new { @class = "form-control", input = "number", min = "0" } })
                @Html.ValidationMessageFor(model => model.bondsnr, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Defines CG label form, Solution found on: https://stackoverflow.com/questions/28553865/editor-template-for-nullable-boolean-dropdown-list-not-rendering -->
        <div class="form-group">
            @Html.LabelFor(model => model.cg, "Competitie gerechtigd", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{
                    var selectListCG = new List<SelectListItem>();
                    selectListCG.Add(new SelectListItem { Text = "Nee", Value = "False" });
                    selectListCG.Add(new SelectListItem { Text = "Ja", Value = "True" });
                }

                @Html.DropDownListFor(model => model.gender, selectListCG, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cg, "", new { @class = "text-danger" })
            </div>
        </div>


        <!-- Defines Para TT label form, Solution found on: https://stackoverflow.com/questions/28553865/editor-template-for-nullable-boolean-dropdown-list-not-rendering -->
        <div class="form-group">
            @Html.LabelFor(model => model.para_tt, "Gehandicapt", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var selectListParaTT = new List<SelectListItem>();
                    selectListParaTT.Add(new SelectListItem { Text = "Nee", Value = "False" });
                    selectListParaTT.Add(new SelectListItem { Text = "Ja", Value = "True" });
                }
                @Html.DropDownListFor(model => model.gender, selectListParaTT, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.birthdate, "Geboorte datum", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.birthdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Defines gender label form, Solution found on: https://stackoverflow.com/questions/28553865/editor-template-for-nullable-boolean-dropdown-list-not-rendering -->
        <div class="form-group">
            @Html.LabelFor(model => model.gender,"Geslacht", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{
                    var selectListGender = new List<SelectListItem>();
                    selectListGender.Add(new SelectListItem { Text = "Man", Value = "True" });
                    selectListGender.Add(new SelectListItem { Text = "Vrouw", Value = "False" });
                }
                @Html.DropDownListFor(model => model.gender, selectListGender, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })

            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.firstname,"Voornaam", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control", style = "text-transform:capitalize" } })
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.insertion,"Tussenvoegsel", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.insertion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.insertion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastname,"Achternaam", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address,"Adres", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.housenumber, "Huisnummer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.housenumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.housenumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.suffix, "Huisnummer toevoeging", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.suffix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.suffix, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.zipcode, "Postcode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, "Woonplaats", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phonenumber, "Telefoonnummer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mobilenumber,"Mobiele nummer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mobilenumber, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.mobilenumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.e_mail, "E-mail adres", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.e_mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.e_mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location_ID, "Locatie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("location_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.location_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category_ID, "Categorie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ls_ID, "Licentie senior", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ls_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ls_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lj_ID, "Licentie junior", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lj_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lj_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.membersince, "Lid sinds", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.membersince,"Lid sinds", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.membersince, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Aanmaken" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Terug", "Index")
</div>
